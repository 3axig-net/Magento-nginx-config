## Maps config file
include conf_m2/maps.conf;

## Certbot renew
# include conf_m2/certbot_renew.conf;

## Proxy server to apply filters and rules
server {
  listen nginx:80;
  server_name ${DOMAIN};
   
  root $root_path/pub;

  ## SSL key and cert location
#   ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
   
  ## Gzipping is an easy way to reduce page weight
  gzip                on;
  gzip_vary           on;
  gzip_proxied        any;
  gzip_types          application/javascript application/x-javascript application/rss+xml text/javascript text/css text/plain image/x-icon image/svg+xml;
  gzip_buffers        4 16k;
  gzip_comp_level     6;

  if ($deny_ip) { return 403; }
  if ($bad_user_agent) { return 403; }
  
  ## Server maintenance block.
  include conf_m2/maintenance.conf;
  
  ## phpMyAdmin configuration	
  include services/phpmyadmin.conf;
  
  ## Rabbitmq configuration	
  include services/rabbitmq.conf;
  
  ## Extra protection rules
  include conf_m2/extra_protect.conf;

  ## Protect admin path
  include conf_m2/admin_protect.conf;

  ## Error log/page
#  include conf_m2/error_page.conf;

  ## sitemap and feeds?
  include conf_m2/sitemap.conf;
  
  ## Static files push only
  include conf_m2/static.conf;
 
  ## Product images and all media/ files
  include conf_m2/media.conf;

  ## Proxy-pass to backend
  location / { 
    proxy_pass http://nginx; 
  }
}

## Backend server
server {
  listen nginx:8080;
  server_name ${DOMAIN};

  root $root_path/pub;

  ## Nginx and php-fpm status
  include conf_m2/status.conf;

  ## Deny all internal locations
  location ~ ^/(app|generated|lib|bin|var|tmp|phpserver|vendor)/ { 
    deny all; 
  }
   
  location / {
    try_files $uri $uri/ /index.php$is_args$args;
  }
	   
  ## Process php files (strict rule, define files to be executed)
  location ~ ^/(index|health_check|get|static|errors/(report|404|503))\.php$ {
    try_files $uri =404;
    include conf_m2/php_backend.conf;
#    fastcgi_intercept_errors on;
     
    ## Enable POST logging
#    if ($request_method = POST) {set $ispostlog A;}
#    if ($request_uri ~* "/${ADMIN_PATH}/") {set $ispostlog "${ispostlog}B";}
#    if ($ispostlog = AB) { access_log /var/log/nginx/postlog.log postlog;}
  }
	
  ## Block other undefined php files, possible injections and random malware hooks.
  location ~* \.php$ { 
    return 404; 
  }
}
